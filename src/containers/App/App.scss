// App style 
#app {
	font-family: "Open Sans";
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	top: 0;
	overflow: auto;
	text-rendering: optimizeLegibility;
}

// Text overflow => ellipsis
:global .overflow_ellipsis {
	display: block;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}


/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
:global .clearfix:before,
:global .clearfix:after {
    content: " "; 
    display: table; 
}
:global .clearfix:after {
    clear: both;
}
/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
:global .clearfix {
    *zoom: 1;
}


// Floats
:global .float_right {
	float: right;
}
:global .float_left {
	float: left;
}


// Inline block
:global .inline_block {
	display: inline-block;
}


// Relative wrapper
:global .relative {
	position: relative;
}


// Flexbox
:global .display_flex {
	display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: box;
    display: flex;
}
:global .flex_center {
	-webkit-align-items: center; 
	-ms-align-items: center;
	align-items: center;
	-webkit-justify-content: center;
	-ms-justify-content: center;
	justify-content: center;
}
:global .flex_align_left {
	-webkit-align-self: flex-start;
	-ms-align-self: flex-start;
	align-self: flex-start;
}
:global .flex_align_center {
	max-width: 50%;
}
:global .flex_align_right {
	-webkit-align-self: flex-end;
	-ms-align-self: flex-end;
	align-self: flex-end;
}
:global .flex_vertical {
	display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: box;
    display: flex;
    -webkit-box-orient: vertical;
    -o-box-orient: vertical;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
}
:global .flex_horizontal {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: box;
	display: flex;
	-webkit-box-orient: horizontal;
	-o-box-orient: horizontal;
	-webkit-flex-direction: row;
	-ms-flex-direction: row;
	flex-direction: row;
	.flex_spacer {
		min-width: 1px;
	}
}
:global .flex_spacer {
	-webkit-box-flex: 1;
	-o-box-flex: 1;
	box-flex: 1;
	-webkit-flex: 1;
	-ms-flex: 1;
	flex: 1;
}


// Circle
:global .circle {
	font-size: 14px;
	border-radius: 999em;
	height: 30px;
    width: 30px;
    display: block;
    text-align: center;
    line-height: 30px;
    padding: 0;
}


// Dropdown
:global .bubble_dropdown_container {
	position: relative;
}


// Custom buttons
:global .button_as_link {
	margin: 0;
	padding: 0;
	cursor: pointer;
	background: none;
	border: none;
}	


// Link 
a {
	color: #0084ff;
	cursor: pointer;
	&:hover {
		color: #057CEB;
	}
}


:global .button {
	font-family: "Helvetica Neue",Helvetica,"Segoe UI",Tahoma,Arial,sans-serif;
	background-repeat: no-repeat;
	// border: 1px solid #e1e8ed;
	border: 1px solid rgba(0, 0, 0, .20);
	// border: 1px solid #C7CACD;
	border-radius: 3px;
	color: #66757f;
	cursor: pointer;
	display: inline-block;
	font-size: 13.5px;
	font-weight: bold;
	line-height: normal;
	padding: 7.5px 14.5px;
	position: relative;
	// background-color: #f5f8fa;
	// background-image: linear-gradient(#fff,#f5f8fa);
	// -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#ffffff, endColorstr=#f5f8fa)";
    background: #fff;
	&:hover {
		color: #232323;
	}
	&.primary {
		color: #fff;
		background-image: linear-gradient(-180deg, #2A86FF 0%, #207CF6 100%);
		-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#2A86FF, endColorstr=#207CF6)";
		border: 1px solid #1A75EC;
		border-radius: 3px;
	}
}

// Hidden
:global .hidden {
	display: none!important;
	visibility: hidden!important;
}

// Form
:global .form_card {
	background-color: white;
	border: 1px solid #edeeee;
	border-radius: 1px;
	margin: 0 0 10px;
	padding: 2em;
}
:global .form_header {
	font-family: "Helvetica Neue",Helvetica,"Segoe UI",Tahoma,Arial,sans-serif;
	color: rgba(0, 0, 0, 1);
	font-size: 22px;
	font-weight: 400;
	vertical-align: middle;
	margin-bottom: 15px;
}
:global .form_note {
	color: #4b4f54;
	font-size: 14px;
	line-height: 18px;
	margin: 10px 20px 10px 20px;
	text-align: center;
}

// Separator 1px - hairline
:global .separator {
	border-top: 1px solid rgba(0, 0, 0, 0.05);
}


// Read-only state 
:global .read_only_input {
	border: none!important;
	background: #EDEEEE;
}


// Custom ladda styles
:global .ladda-button {
	-webkit-transition: .3s cubic-bezier(.175,.885,.32,1.275) all!important;
	transition: .3s cubic-bezier(.175,.885,.32,1.275) all!important;
	.ladda-spinner {
	    -webkit-transition: .3s cubic-bezier(.175,.885,.32,1.275) all!important;
	    transition: .3s cubic-bezier(.175,.885,.32,1.275) all!important;
	}
	&.right {
		padding-right: 40px;
		.ladda-spinner {
			position: absolute;
			right: 20px;
			top: 16px;
		}	
	}
}



// Upload input hidden for button
:global .upload_input_button {
	font: 500px monospace; /* make the input's button HUGE */
    opacity:0; /* this will make it transparent */
    filter: alpha(opacity=0); /* transparency for Internet Explorer */
    position: absolute;  /* making it absolute with z-index:1 will place it on top of the button */
    z-index: 1;
    top:0;
    right:0;
    padding:0;
    margin: 0;
}


//

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

:global .react-spinner {
  position: relative;
  width: 32px;
  height: 32px;
  top: 50%;
  left: 50%;
}

@include keyframes('spin') {
  0% { opacity: 1; }
  100% { opacity: 0.15; }
}

@keyframes react-spin {
 0% { opacity: 1; }
 100% { opacity: 0.15; }
}

@-moz-keyframes react-spin {
 0% { opacity: 1; }
 100% { opacity: 0.15; }
}

@-webkit-keyframes react-spin {
 0% { opacity: 1; }
 100% { opacity: 0.15; }
}

:global .react-spinner_bar {
  border-radius: 5px;
  position: absolute;
  width: 20%;
  height: 7.8%;
  top: -3.9%;
  left: -10%;
  background-color: black;
  -webkit-animation: react-spin 1s infinite linear!important;
  -moz-animation: react-spin 1.2s infinite linear!important;
  -ms-animation: react-spin 1.2s infinite linear!important;
  -o-animation: react-spin 1.2s infinite linear!important;
  animation: react-spin 1.2s infinite linear!important;
}


//
:global .fa-spin {
    -webkit-animation: fa-spin 1s infinite linear!important;
    -moz-animation: fa-spin 1s infinite linear!important;
    -ms-animation: fa-spin 1s infinite linear!important;
    -o-animation: fa-spin 1s infinite linear!important;
    animation: fa-spin 1s infinite linear!important;
}


